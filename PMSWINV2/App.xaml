<Application
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
             xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid" 
             xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys"
             xmlns:Custom="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys" 
             xmlns:Custom1="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal" 
             x:Class="MTPMSWIN.App" StartupUri="View/Starting.xaml">

    <Application.Resources>
        <ResourceDictionary>

            <!--<Color x:Key="WindowTitleBackground">#FFE8EDF9</Color>
            <Color x:Key="WindowTitleColor">#FFE8EDF9</Color>
            <Color x:Key="TextBoxFocusBG">#FF3843C4</Color>
            <Color x:Key="TextBoxFocus">#FF211AA9</Color>
            <Color x:Key="ComboBoxFocusBG">#FF3843C4</Color>
            <Color x:Key="ComboBoxFocus">#FF211AA9</Color>
            <Color x:Key="PasswordBoxFocusBG">#FF3843C4</Color>
            <Color x:Key="PasswordBoxFocus">#FF211AA9</Color> -->


            <Style x:Key="MyBorder" TargetType="{x:Type Border}">
                <Setter Property="BorderBrush" Value="#FFF096F9" />
                <Setter Property="BorderThickness" Value="3" />
                <Setter Property="CornerRadius" Value="4" />
            </Style>
            <Style x:Key="mywindow" TargetType="{x:Type Window}">
                <Setter Property="Background" Value="Transparent" />
            </Style>
            <Style x:Key = "myTextEdit" TargetType = "{x:Type TextBox}">
                <Style.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="4" />
                    </Style>
                </Style.Resources>
                <Setter Property = "Height" Value = "35" />
                <Setter Property="Padding" Value="5"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property = "Foreground" Value = "White" />
                <Setter Property = "FontSize" Value = "14" />
                <Setter Property="SelectionBrush" Value="#FFFD4757"/>
                <Setter Property="Opacity" Value="0.5"/>
                <Setter Property="OpacityMask" Value="White"/>
            </Style>
            <Style x:Key = "MyTextEditLogin" TargetType = "{x:Type TextBox}">
                <Style.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="4" />
                    </Style>
                </Style.Resources>
                <Setter Property = "Height" Value = "35" />
                <Setter Property="Padding" Value="5"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property = "Foreground" Value = "Black" />
                <Setter Property = "FontSize" Value = "15" />
                <Setter Property="FontWeight" Value="Bold"/>

                <Setter Property="SelectionBrush" Value="#FFFD4757"/>
                <Setter Property="Opacity" Value="0.5"/>
                <Setter Property="OpacityMask" Value="White"/>
                <Setter Property="BorderThickness" Value="3"/>
                <Setter Property="BorderBrush" Value="#FFF096F9"/>
            </Style>
            <Style x:Key = "myPasswordBox" TargetType = "{x:Type PasswordBox}">
                <Setter Property = "Height" Value = "35" />
                <Setter Property="Padding" Value="5"/>
                <Setter Property = "FontSize" Value = "14" />
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="Opacity" Value="0.5"/>
                <Setter Property="OpacityMask" Value="White"/>
                <Setter Property="SelectionBrush" Value="#FFFD4757"/>
                <Setter Property="BorderThickness" Value="3"/>
                <Setter Property="BorderBrush" Value="#FFF096F9"/>
                <!-- <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type PasswordBox}">
                            <Border Name="Border" Style="{StaticResource MyBorder}"></Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>-->
            </Style>
            <Style x:Key = "myButtonStyle" TargetType = "{x:Type Button}">
                <Style.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="4" />
                    </Style>
                </Style.Resources>
                <Setter Property = "Height" Value = "35" />
                <Setter Property = "Width" Value = "80" />
                <Setter Property="Background" Value="AntiqueWhite"/>
                <Setter Property = "Foreground" Value = "#FFFF0068" />
                <Setter Property = "FontSize" Value = "18" />
                <Setter Property = "Margin" Value = "15" />
            </Style>
            
            <Style x:Key = "MyFlatButton" TargetType = "{x:Type Button}">
                <Style.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="4" />
                    </Style>
                </Style.Resources>
                <Setter Property = "Height" Value = "35" />
                <Setter Property = "Width" Value = "80" />
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property = "Foreground" Value = "White" />
                <Setter Property = "FontSize" Value = "18" />
                <Setter Property="FontFamily" Value="FontAwesome"/>
                <Setter Property = "Margin" Value = "15" />
            </Style>

              <Style x:Key = "MyButtonAction" TargetType = "{x:Type Button}"> 
                <Style.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="4" />
                    </Style>
                </Style.Resources>
                <Setter Property="dx:ThemeManager.ThemeName" Value="None"/>
                <Setter Property = "Height" Value = "35" />
                <Setter Property = "Width" Value = "80" />
                <Setter Property = "FontSize" Value = "16" />
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Foreground" Value="#555555"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="BorderBrush" Value="#ffffff"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="UseLayoutRounding" Value="False"/> 
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FF7AA5DC"/>
                            <GradientStop Color="#FFA4BEE0" Offset="0.996"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>                
                <Style.Triggers>                     
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="Gray"/>
                        <Setter Property="Cursor" Value="No"/>
                        <Setter Property="BorderBrush" Value="#FFF4FF08"/>
                        <Setter Property="BorderThickness" Value="2"/>
                        <Setter Property="UseLayoutRounding" Value="False"/>
                        <Setter Property="Background">
                            <Setter.Value>
                                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                                    <GradientStop Color="#FFE0B806" Offset="0.002"/>
                                    <GradientStop Color="#FFF9D165" Offset="1"/>
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key = "MyButtonSell" TargetType = "{x:Type Button}">
                <Style.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="4" />
                    </Style>
                </Style.Resources>
                <Setter Property="dx:ThemeManager.ThemeName" Value="None"/>
                <Setter Property = "Height" Value = "35" />
                <Setter Property = "Width" Value = "80" />
                <Setter Property = "FontSize" Value = "16" />
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Foreground" Value="#ffffff"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="BorderBrush" Value="#FFA4C4EE"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="UseLayoutRounding" Value="False"/>                
                <Setter Property="Background" Value="Transparent"/>
                <Style.Triggers> 
                    <Trigger Property="IsEnabled" Value="False"> 
                        <Setter Property="Cursor" Value="No"/>                       
                        <Setter Property="Opacity" Value="0.7" />
                        <Setter Property="Background" Value="#ffff0000"/>                         
                    </Trigger> 
                </Style.Triggers>
            </Style>

            <Style x:Key = "MyButtonLogin" TargetType = "{x:Type Button}">
                <Style.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="4" />
                    </Style>
                </Style.Resources>
                <Setter Property = "Height" Value = "35" />
                <Setter Property = "Width" Value = "80" />
                <Setter Property="Background" Value="#FFDC910E"/>
                <Setter Property = "Foreground" Value = "White" />
                <Setter Property = "FontSize" Value = "18" />
                <Setter Property = "Margin" Value = "15" />
            </Style>

            <Style x:Key = "MyImage" TargetType = "{x:Type Image}">
                <Style.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="4" />
                        <Setter Property="BorderBrush" Value="White"/>
                        <Setter Property="BorderThickness" Value="2"/>
                    </Style>
                </Style.Resources>
                <Setter Property="Opacity" Value="0.5"/>
                <Setter Property="OpacityMask" Value="White"/>
            </Style>
            <Style TargetType="{x:Type Button}" x:Key="mybuttonStyle2">
                <Style.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="4" />
                    </Style>
                </Style.Resources>
                <Setter Property = "Height" Value = "35" />
                <Setter Property = "Width" Value = "80" />
                <Setter Property="Background" Value="#FFFF9406"/>
                <Setter Property = "Foreground" Value = "#fff" />
                <Setter Property = "FontSize" Value = "18" />
                <Setter Property = "Margin" Value = "15" />
            </Style>
            
            <Style TargetType="{x:Type Label}" x:Key="myLabelStyle">
                <Setter Property="FontFamily" Value="{DynamicResource DefaultFontFamily}" />
                <Setter Property="FontSize" Value="13" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Width" Value="Auto" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
            </Style>

            <Style TargetType="{x:Type CheckBox}" x:Key="MyCheckBox">
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="FlowDirection" Value="RightToLeft" />
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <StackPanel Orientation="Horizontal">
                                <Image x:Name="checkboxImage" Source="/Images/Icons/blueschecked.png" Width="32"/>
                                <ContentPresenter/>
                            </StackPanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="checkboxImage" Property="Source" Value="/Images/Icons/blueschecked.png"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="false">
                                    <Setter TargetName="checkboxImage" Property="Source" Value="/Images/Icons/bluesunchecked.png"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key = "MyMenuItem" TargetType = "{x:Type MenuItem}">
                <Style.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="2" />
                    </Style>
                </Style.Resources>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property = "Foreground" Value = "White" />
                <Setter Property = "FontSize" Value = "18" />
            </Style>
            <Style x:Key = "MySubMenuItem" TargetType = "{x:Type MenuItem}"> 
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property = "Foreground" Value = "#FF494545" />
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property = "FontSize" Value = "15" />
                <Setter Property="Margin" Value="2,2,0,4"/>
             </Style>
           
             <!--FILTER ROW 082019-->
              <Style TargetType="dxg:FilterCellContentPresenter"  
                    BasedOn="{StaticResource {dxgt:GridRowThemeKey ResourceKey=CellStyle}}">
                    <Setter Property="Foreground" Value="Lime" />
                    <Style.Triggers>
                        <Trigger Property="SelectionState" Value="Focused">
                            <Setter Property="Foreground" Value="#FF6600" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            

            <Style x:Key="NewItemRow" TargetType="{x:Type dxg:CellContentPresenter}">
                <Setter Property="Background" Value="{DynamicResource {Custom:GridRowThemeKey ResourceKey=CellBorderNoneBrush}}"/>
                <Style.Triggers>
                    <Trigger Property="SelectionState" Value="Selected">
                        <Setter Property="Background" Value="{DynamicResource {Custom:GridRowThemeKey ResourceKey=BorderSelectedBrush}}"/>
                        <Setter Property="Foreground" Value="{DynamicResource {Custom:GridRowThemeKey ResourceKey=TextRowSelectedBrush}}"/>
                    </Trigger>
                    <Trigger Property="SelectionState" Value="Focused">
                        <Setter Property="Background" Value="{DynamicResource {Custom:GridRowThemeKey ResourceKey=CellBorderFocusedBrush}}"/>
                        <Setter Property="Foreground" Value="{DynamicResource {Custom:GridRowThemeKey ResourceKey=CellTextFocusedBrush}}"/>
                    </Trigger>
                    <Trigger Property="SelectionState" Value="FocusedAndSelected">
                        <Setter Property="Background" Value="{DynamicResource {Custom:GridRowThemeKey ResourceKey=BorderFocusedBrush}}"/>
                        <Setter Property="Foreground" Value="{DynamicResource {Custom:GridRowThemeKey ResourceKey=TextFocusedBrush}}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

           
            
            <Style x:Key="ColumnHeader"  TargetType="dxg:GridColumnHeader">
                <Setter Property="Background" Value="#ff0"/>
                <Setter Property="FontSize" Value="12"/>
            </Style>

            <Style TargetType="dxg:GridColumnHeader">
                <Setter Property="Background" Value="Red"/>
            </Style>
  
            <DataTemplate x:Key="ColumnHeaderTemplate">
                <ContentControl>
                    <dxg:GridColumnHeader>
                        <dxg:GridColumnHeader.Template>
                            <ControlTemplate>
                                <Border BorderBrush="Black" Background="GreenYellow" BorderThickness="0" Height="{Binding}" Width="{Binding}" Margin="0">
                                    <Label Content="{Binding}" Foreground="White"  FontSize="16" FontFamily="{DynamicResource EuroBold}" />
                                </Border>
                            </ControlTemplate>
                        </dxg:GridColumnHeader.Template>
                    </dxg:GridColumnHeader>
                </ContentControl>
            </DataTemplate>
             
        </ResourceDictionary>

    </Application.Resources>
</Application>
